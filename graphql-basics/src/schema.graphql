type Query {
    posts(query: String): [Post!]!
    users(query : String) : [User!]!
    comments: [Comment!]!
}

type Mutation{
    createUser(data: createUserInput!) : User!
    createPost(data: createPostInput!): Post!
    createComment(data: createCommentInput!) : Comment!
    deleteUser(id:ID!): User!
    deletePost(id: ID!) : Post!
    deleteComment(id: ID!): Comment!
    updateUser(id: ID!, data: updateUserInput!) : User!
    updatePost(id: ID!, data: updatePostInput!) : Post!
    updateComment(id: ID!, data: updateCommentInput!): Comment!
}

type Subscription{
    count: Int!
    comment(postID: ID!) : Comment!
}

input createUserInput{
    name:String!
    email:String!
    age:Int
}

input updateUserInput{
    name:String
    email:String
    age:Int
}

input createPostInput{
    title: String!,
    body: String!,
    published: Boolean!,
    author: ID!
}

input updatePostInput{
    title: String
    body: String
    published: Boolean
}

input createCommentInput{
    text: String!, 
    author: ID!, 
    post: ID!
},

input updateCommentInput{
    text: String
}

type Post{
    id:ID!
    title:String!
    body:String!
    published: Boolean!
    author: User!
    comments:[Comment!]!
}

type User{
    id:ID!
    name:String!
    email:String!
    age:Int
    posts: [Post!]!
    comments:[Comment!]!
}

type Comment {
    id:ID!
    text:String!
    author:User!
    post:Post!
}